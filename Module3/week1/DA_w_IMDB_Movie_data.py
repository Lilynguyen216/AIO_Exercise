# -*- coding: utf-8 -*-
"""data_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ox977NretQ1qlFxU8-uhIlZeJP-5xSUX

### **A. Data Analysis with IMDB Movie data**
"""

!gdown 1g1TVZc_ypPsGSIfHHsYtbZ9UG3m-IAUj
# https://drive.google.com/file/d/1g1TVZc_ypPsGSIfHHsYtbZ9UG3m-IAUj/view?usp=sharing

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

dataset_path = 'IMDB-Movie-Data.csv'
data = pd.read_csv(dataset_path)

data_indexed = pd.read_csv(dataset_path, index_col = 'Title')
data.head()

data.info()

data.describe()

genre = data['Genre']
genre

data[['Genre']]

some_cols = data[['Title', 'Genre', 'Actors','Director','Rating']]
some_cols

data.iloc[10:15][['Title','Rating','Revenue (Millions)']]

data[((data['Year'] >= 2010) & (data['Year'] <= 2015))
      & (data['Rating'] < 6.0)
      & (data['Revenue (Millions)'] > data['Revenue (Millions)'].quantile(0.95))]

data.groupby('Director')[['Rating']].mean().head()

data.groupby('Director')[['Rating']].mean().sort_values(by = 'Rating', ascending = False).head()

data.isnull().sum()

data.drop('Metascore', axis = 1).head()

data.dropna()

revenue_mean = data_indexed['Revenue (Millions)'].mean()
print("The mean revenue is: ", revenue_mean)

data_indexed['Revenue (Millions)'].fillna(revenue_mean, inplace = True)

def rating_group(rating):
  if rating >= 7.5:
    return 'Good'
  elif rating >= 6.0:
    return 'Average'
  else:
    return 'Bad'

data['Rating_category'] = data['Rating'].apply(rating_group)
data[['Title', 'Director', 'Rating', 'Rating_category']].head(5)
